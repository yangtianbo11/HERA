LABEL(LIST_INDEX)
    // mimimum standard "preamble" for a function that calls other functions:
    //   save PC_ret and FP_alt (as per Figure 7.9 of HERA docs v. 2.4.0)
    INC(SP, 2)
    STORE(PC_ret, 0,FP)
    STORE(FP_alt, 1,FP)

INC(SP, 2)
STORE(R4, 2,FP) // also keep R4 safe, I want to use it in the function that calls LIST_LENGTH...
STORE(R5, 3,FP)

//body of index function:
MOVE(R4, R1)	// R4 will be "current" list
    SET(R5, -1)   	// R5 will be the result, start at -1
  LABEL(CHECK_IF_CONTAINS)
    MOVE(R1, R4)	// pass current list, i.e., R4 as a parameter to "contains?"
    MOVE(FP_alt, SP)    // standard call sequence, start with new frame above this one
    CALL(FP_alt, LIST_CONTAINS)
    FLAGS(R1)		// if result is true, i.e. nonzero, the "Z" flag will be off
  BNZ(LIST_INDEX_DONE)

INC(R5, 1)
    MOVE(R1, R4)	// pass current list, i.e., R4 as a parameter to "rest"
    MOVE(FP_alt, SP)    // standard call sequence, start with new frame above this one
    CALL(FP_alt, LIST_REST)
    MOVE(R4, R1)  	// copy the result of "rest" into R4, the current list
  BR(CHECK_IF_CONTAINS)

LABEL(LIST_INDEX_DONE)
    MOVE(R1, R5)	// copy the count from R5 into R1, establishing the return value

LOAD(R4, 2,FP)
LOAD(R5, 3,FP)
DEC(SP, 2)

// minimum standard "postamble" for a function that calls other functions:
    //   restore PC_ret and FP_alt (as per Figure 7.9 of HERA docs v. 2.4.0)
    LOAD(PC_ret, 0,FP)
    LOAD(FP_alt, 1,FP)
    DEC(SP, 2)
RETURN(FP_alt, PC_ret)